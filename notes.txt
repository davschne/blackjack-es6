Required language features:
* classes
* inheritance with 'extends'
* template strings
* default args
* Promises
* one other feature ('let'?)
* bonus: generator

class Card
- suit
- rank (2-9, J, Q, K, A)

deck is array of cards?

class Player
- cards : array
- hardTotal  : current total ("A" = 1)
- softTotal  : current total ("A" = 11)

class User extends Player
- nextMove() : returns 1 (hit) or 0 (stay)
  - prompt user for input USE PROMISE?

class Dealer extends Player
- nextMove() :
  - if hardTotal < 17 : 1 (hit)
  - else : 0 (stay)

function game()
- build deck
  - for each suit, use generator with for...of loop
- shuffle
- deal
- function hand()
  - for each player:
  function turn(player)
    - call player.hit()
      - user: prompt for input
    - if false (stand), return score
      // logic for score
    - if true (hit):
      - check hardTotal
        - if > 21 : other player wins
        - else player.hit()
  - compare scores & return winner

TO DO :
  - Should error for "bust" be thrown in addCard()?
  - Greet player, build deck, shuffle, deal
  - Taking user input in hit() method
  - determineWinner
  - bust
